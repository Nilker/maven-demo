<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--把sqlSessionFactory对象整合到 spring容器中去（默认为单例）-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--todo 指定mapper.xml的路径-->
        <property name="mapperLocations" value="classpath:com/it/dao/xml/*.xml"/>
        <!--mybatis相关配置 延迟加载 全局二级缓存-->
        <property name="configLocation" value="classpath:xml/mybatis-config.xml" />

        <!-- 配置实体扫描路径，多个package可以用分号; 逗号, 分隔， 支持通配符*-->
        <!-- com.a.b.entity;com.a.c.entity;com.d.*.entity-->
        <property name="typeAliasesPackage" value="com.it.entity"/>
        <!-- MP 全局配置注入 -->
        <property name="globalConfig" ref="globalConfig"/>
        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
                    <property name="dialectType" value="mysql" />
                </bean>
                <!-- 乐观锁插件 -->
                <bean id="optimisticLockerInterceptor" class="com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor"/>
                <!-- 性能拦截器，兼打印sql，不建议生产环境配置-->
                <bean id="performanceInterceptor" class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor">
                    <!--maxTime 指的是 sql 最大执行时长-->
                    <property name="maxTime" value="100" />
                    <!--SQL是否格式化 默认false-->
                    <property name="format" value="true" />
                </bean>
                <!--作用是分析 处理 DELETE UPDATE 语句， 防止小白或者恶意 delete update 全表操作！不建议生产环境配置-->
                <bean id="sqlExplainInterceptor" class="com.baomidou.mybatisplus.plugins.SqlExplainInterceptor">
                    <!--参数：stopProceed 发现执行全表 delete update 语句是否停止执行-->
                    <property name="stopProceed" value="false" />
                </bean>
            </array>
        </property>
    </bean>


    <!--配置把mapper接口对应生成的代理对象交给spring容器管理-->
    <!-- 配置mybatis 扫描mapper接口的路径, 相当于注解@MapperScan，@MapperScan("com.baomidou.mybatisplus.test.h2.entity.mapper")-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--todo  扫描mapper 包名-->
        <property name="basePackage" value="com.it.dao"/>

        <!--3.0之后可以省略-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    </bean>



    <!--mybatis-plus 组件的相关配置   开始-->
    <!-- 定义 MP 全局策略 -->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!-- 逻辑删除 定义下面3个参数-->
        <property name="sqlInjector" ref="logicSqlInjector"/>
        <property name="logicDeleteValue" value="-1"/>
        <property name="logicNotDeleteValue" value="1"/>
        <!-- 全局ID类型： 0, "数据库ID自增"， 1, "用户输入ID", 2, "全局唯一ID", 3, "全局唯一ID"-->
        <property name="idType" value="2"/>
        <!--#驼峰下划线转换-->
        <property name="dbColumnUnderline" value="false"/>
        <!-- 2.1-gamma+ 数据库自动识别，无需配置数据库类型
        <property name="dbType" value="mysql" />
        -->
        <!-- 2.3+ 全局表前缀 mp_
        <property name="tablePrefix" value="mp_" />
        -->
        <!--主键Sequence-->
        <property name="keyGenerator" ref="keyGenerator"/>
        <!-- 公共字段填充处理器 -->
        <property name="metaObjectHandler" ref="myMetaObjectHandler"/>
        <!--数据库关键字转义符，'desc', "desc" 2.1-gamma+不需要制定-->
        <!--<property name="identifierQuote" value="'" />-->
    </bean>

    <!-- 配置oracle主键Sequence， 其他类型数据库，请配置相应的类型-->
    <bean id="keyGenerator" class="com.baomidou.mybatisplus.incrementer.DB2KeyGenerator"/>

    <!-- 自定义处理器 -->
    <bean id="myMetaObjectHandler" class="com.it.core.MyMetaObjectHandler"/>
    <!-- 逻辑删除Sql注入器-->
    <bean id="logicSqlInjector" class="com.baomidou.mybatisplus.mapper.LogicSqlInjector"/>

    <!--mybatis-plus 组件的相关配置   结束-->

</beans>